
input[type=file]::file-selector-button {
    cursor: pointer;
}

input[type=submit]:disabled {
    opacity: 0.5;
    cursor:not-allowed;
}

.content {
    max-width: 100%;
    width: min(2000px, 80%);
    font-family: 'Roboto', sans-serif;
}

.container {
    display: grid;
    grid-template-columns: 50% 50%;
    justify-content: center;
    max-width: 100%;
    gap: 1rem;
    align-items: flex-start;
}

.preview-container {
    width: 100%;
    border: 1px solid rgb(var(--clr-accent) / 0.7);
    border-radius: 1rem;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 1rem;
}

.preview-container h2 {
    margin-bottom: 1.5rem;
}

.preview {
    width: 100%;
}

.form-card {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1.5rem;
    width: 100%;
}

.form-card__section {
    display: flex;
    gap: 0.5rem;
    flex-direction: column;
    background-color: rgb(255 255 255 / 0.1);
    padding: 1.5rem;
    border-radius: 1rem;
}

.form-card__section--heading {
    text-transform: uppercase;
    padding-bottom: 1rem;
    color: black;
    font-weight: bold;
    margin: 0;
    text-align: left;
}

label {
    text-transform: uppercase;
    font-size: 0.8rem;
    color: rgb(var(--clr-text) / 0.8);
}

input[type="text"] {
    border: 1px solid rgb(var(--clr-text) / 0.25);
}

textarea {
    min-height: 100px;
    font-family: 'Roboto', sans-serif;
}

#tagline {
    min-height: 50px;
}

#tags-input {
    min-height: 100px;
}

.section-container {
    display: flex;
}

.input-container {
    display: flex;
    flex-direction: column;
}

.form-card input[type=submit] {
    background-color: rgb(var(--clr-accent));
}

.form-card input[type=submit]:hover {
    background-color: rgb(var(--clr-accent) / 0.7);
}

.btn-catalogue {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    justify-content: center;
    align-items: center;
}

.btn-catalogue button {
    width: 3rem;
    height: 3rem;
    padding: 0.75rem;
    background-color: rgb(var(--clr-bg));
    color: rgb(var(--clr-text));
}

.btn-catalogue button svg {
    width: 100%;
    height: 100%;
    display: block;
}

.img-gallery {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 0.25rem;
    justify-items: center;
    align-items: center;
}

.gallery-img-container {
    position: relative;
    max-height: 150px;
    max-width: 150px;
    overflow: hidden;
    border-radius: 0.4rem;
}

.gallery-img-container.locked {
    -webkit-filter: grayscale(100%) brightness(50%);
    filter: grayscale(100%) brightness(50%);
}

.gallery-img {
    object-fit: cover;
    max-height: 100%;
    max-width: 100%;
    aspect-ratio: 1 / 1;
    cursor: pointer;
    transition: transform 0.2s ease-in-out;
}

button {
    border-radius: 0.3rem;
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 1;
    transition: opacity 0.05s ease-in-out;
}

button:hover {
    opacity: 0.8;
}

.gallery-img-container__btns {
    display: flex;
    position: absolute;
    bottom: 0;
    justify-content: space-between;
    opacity: 0;
    transition: opacity 0.25s ease-in-out;
    width: 100%;
    background-color: rgb(0 0 0 / 0.5);
    padding: 0.15rem 0;
}

.gallery-img-container:hover .gallery-img-container__btns {
    opacity: 1;
}

.gallery-btn {
    padding: 0.5rem;
    font-size: 1.1rem;
    background-color: rgb(255 255 255 / 0.25);
    translate: 0 3rem;
    transition: translate 0.1s ease-in-out;
}

.gallery-img-container:hover .gallery-btn:nth-child(1) {
    translate: 0;
    transition-delay: 0.0s;
}

.gallery-img-container:hover .gallery-btn:nth-child(2) {
    transition-delay: 0.05s;
    translate: 0;
}

.gallery-img-container:hover .gallery-btn:nth-child(3) {
    transition-delay: 0.1s;
    translate: 0;
}

.gallery-img-container:hover .gallery-btn:nth-child(4) {
    transition-delay: 0.15s;
    translate: 0;
}

.gallery-btn:hover {
    background-color: rgb(255 255 255 / 0.6);
}

.editor-container {
    padding: 1rem;
    width: 100%;
    height: 100%;
}

#editor {
    width: 100%;
    /* min-width: 300px; */
    min-height: 300px;
    padding-top: 1rem;
    border-radius: 0.3rem;
    overflow: hidden;
}

.modal {
    background: rgba(0,0,0,0.7);
    opacity: 0;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    border: none;
    transition: 0.25s ease-in-out;
    z-index: 10;
    cursor: pointer;
  }
  
.modal.open {
    opacity: 1;
    pointer-events: all;
}

.modal img {
    position: absolute;
    max-width: 80%;
    max-height: 80%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(0.5);
    transition: 0.25s ease-in-out;
    object-fit: cover;
}

.modal img.open {
    transform: translate(-50%, -50%) scale(1);
  }

/***************************** tags */
.tags__holder {
    display: flex;
    gap: 0.4rem;
    flex-wrap: wrap;
}

.tag {
    border-radius: 1rem;
    padding: 0.4rem 0.75rem 0.4rem 1rem;
    background-image: var(--accent-gradient);
    background-clip: padding-box;
    border: 2px solid rgb(255 255 255 / 0.1);
    background-size: 250% 100%;
    opacity: 0.8;
    color: white;
    background-position: left;
    display: flex;
    gap: 0.6rem;
    cursor: pointer;
    font-size: 0.9rem;
    animation: bg-gradient-right 20s ease-in-out infinite alternate;
}

.tag:hover {
    box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px, rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;
}

/************************ typeAhead dropdowns */
.tags__input-container {
    position: relative;
    width: 100%;
}

#tags__input {
    width: 100%;
    border-bottom-right-radius: 0;
    border-bottom-left-radius: 0;
}

.dropdown {
    position: absolute;
    width: 100%;
    display: flex;
    gap: 0.2rem;
    background-color: rgb(var(--clr-bg));
    z-index: 10;
    border-bottom-right-radius: 0.5rem;
    border-bottom-left-radius: 0.5rem;
    overflow: hidden;
}

.dropdown__suggestion {
    cursor: pointer;
    border-bottom: 1px solid grey;
    padding: 0.3rem 0.5rem;
}

.dropdown__suggestion--active {
    background-color: rgb(255 255 255 / 0.2);
}

.checkbox-container {
    display: flex;
    justify-self: start;
    color: rgb(var(--clr-text-dark));
}

#publish {
    right: -1rem;
    margin-right: -1rem;
    position: relative;
    width: 1.1rem;
}

.checkbox-container input + label {
    background-color: rgb(255 255 255 / 0.1);
    padding: 1rem 1rem 1rem 4rem; 
    color: inherit;
    border-radius: 0.3rem;
    cursor: pointer;
    user-select: none;
    font-size: 1.4rem;
    font-family: 'Josefin Sans', sans-serif;
    font-weight: bold;
}

.checkbox-container input:checked + label {
    background-color: goldenrod;
}


