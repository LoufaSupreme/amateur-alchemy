extends layout 

block stylesheets
    link(rel='stylesheet', href='/styles/triangleTestResults.css')

block content 
  //- pre= h.dump(article)
  - 
    const correct = article.triangle_tests.filter(test => {
      if (test.actual_unique) {
        return test.perceived_unique === test.actual_unique.cup
      }
    });

    const cicerones = article.triangle_tests.filter(test => {
      return test.additional_training.includes('cicerone')
    });

    const bjcp = article.triangle_tests.filter(test => {
      return test.additional_training.some(elem => elem.includes('bjcp'));
    }); 

    const sensory = article.triangle_tests.filter(test => {
      return test.additional_training.includes('sensory')
    }); 

    const withComments = article.triangle_tests
      .filter(test => {
        return test.comments.trim() !== "";
      })
      .map(test => {
        if (test.actual_unique) {
          const isCorrect = test.perceived_unique === test.actual_unique.cup;
          const actualUniqueBeer = article.beer_key[test.actual_unique.color];
          const notUniqueBeerColorCode = test.actual_unique.color === 'blue' ? 'yellow' : 'blue';
          const perceivedUniqueBeer = article.beer_key[notUniqueBeerColorCode];
          
          test.isCorrect = isCorrect;
          test.actualUniqueBeer = actualUniqueBeer;
          test.perceivedUniqueBeer = perceivedUniqueBeer;
        }
        else {
          test.isCorrect = 'No key submitted';
          test.actualUniqueBeer = 'No key submitted';
          test.perceivedUniqueBeer = 'No key submitted';
        }
        return test;
      })

  section.title-container
    h1.title= `${article.title}`
    h2.subtitle= title

  section.results-section 
    h3.section-title Demographics
    span.smaller-text= `${article.triangle_tests.length} responses submitted`
    .icons 
      if cicerones.length
        .icon-container 
          img(src="/images/cicerone_icon.png")
          span.smaller-text= `${cicerones.length} Cicerones`
      if cicerones.length
        .icon-container 
          img(src="/images/bjcp_icon.png")
          span.smaller-text= `${bjcp.length} BJCP Judges`
      if cicerones.length
        .icon-container 
          img(src="/images/sensory_training_icon.png")
          span.smaller-text= `${sensory.length} With Sensory Training`
    .results-container
      .chart-wrapper
        canvas.chart#demographics 

  section.results-section 
    if article.stats.p_val <= 0.05
      h3.section-title Statistically Significant!
      .results-container
        h4.big
          span.green= `${correct.length}` 
          span= ` / ${article.triangle_tests.length}`
          p.larger-text correct responses (p-value = 
            span.green= `${article.stats.p_val.toFixed(2)}`
            | )
    else 
      h3.section-title Not Statistically Significant
      .results-container
        h4.big
          span.red= `${correct.length}` 
          span= ` / ${article.triangle_tests.length}`
        p.larger-text correct responses (p-value = 
          span= `${article.stats.p_val.toFixed(2)}`
          | )
    if article.stats.significance_threshold.p_val > -1
      p.padded.smaller-text= `${article.stats.significance_threshold.num_correct} correct responses needed for statistical significance (p-value â‰¤ 0.05)`
    else
      p.padded.smaller-text There are not enough responses yet to do a proper statistical analysis. 

  section.results-section
    h3.section-title Preferences 
    span#preferences-stmt.smaller-text
    .results-container
      .chart-wrapper
        canvas.chart#preferences 

  section.results-section
    h3.section-title Sensory Comparison 
    .results-container#comparison-container
      .range-input#maltiness-range 
        h3.range-input__question-subtitle Maltiness
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="malt_character" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="maltiness") The maltiness is about equal.

      .range-input 
        h3.range-input__question-subtitle Hoppiness
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="hop_character" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="hoppiness") The hoppiness is about equal.

      .range-input
        h3.range-input__question-subtitle Yeast Character
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="yeast_character" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="yeast character") The yeast character is about equal.

      .range-input
        h3.range-input__question-subtitle Bitterness
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="bitterness" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="bitterness") The bitterness is about equal.

      .range-input
        h3.range-input__question-subtitle Carbonation
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="carbonation" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="carbonation") The carbonation is about equal.

      .range-input
        h3.range-input__question-subtitle Body
        .range-input__range 
          .range-input__beer-label= article.beer_key.blue
          input(type="range" id="body" min="-2" max="2" value="0" step="0.1")
          .range-input__beer-label= article.beer_key.yellow
        p.range-input__subheading(data-attr="body") The body is about equal.

  section.results-section
    h3.section-title Off Flavours 
    .results-container
      .chart-wrapper
        //- #flaws-table
        canvas#flaws

  section.results-section
    h3.section-title Feedback 
    .results-container
      .comments-container
        each comment of withComments
          blockquote= `${comment.comments}`
            if comment.name
              span= `${comment.name}`
            else
              span Anonymous
            .overlay 
              if comment.isCorrect 
                span.is-correct= `${comment.name} guessed correctly!`
              else
                span.is-correct= `${comment.name} guessed incorrectly`
              .table
                .row.headings
                  .cell= comment.perceived_unique === 'A' ? 'A*' : 'A'
                  .cell= comment.perceived_unique === 'B' ? 'B*' : 'B'
                  .cell= comment.perceived_unique === 'C' ? 'C*' : 'C'
                if comment.actual_unique
                  .row 
                    .cell= comment.actual_unique.cup === 'A' ? comment.actualUniqueBeer : comment.perceivedUniqueBeer
                    .cell= comment.actual_unique.cup === 'B' ? comment.actualUniqueBeer : comment.perceivedUniqueBeer
                    .cell= comment.actual_unique.cup === 'C' ? comment.actualUniqueBeer : comment.perceivedUniqueBeer
                else 
                  .row 
                    .cell ?
                    .cell ?
                    .cell ?

block scripts 
    //- chart.js
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.9.1/dist/chart.min.js"></script>
    //- required to defer chart.js animation until scrolled into view
    script(src="https://cdn.jsdelivr.net/npm/chartjs-plugin-deferred@2/dist/chartjs-plugin-deferred.min.js")
    //- custom script file
    script(src="/javascript/triangleTestResults.js")