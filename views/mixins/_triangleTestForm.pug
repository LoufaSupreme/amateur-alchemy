mixin triangleTestForm()
    form(action=`/triangle-test/article/${article._id}` method="POST" class="form-card")
        .form-card__section.main
            h2.form-card__section--heading Content
            label(for="token") What is your token number? 
            input(type="text" name="token" id="token" required)
            
            label(for="name") Name (optional) 
            input(type="text" name="name" id="name")

            fieldset 
                legend Which one describes you best? 
                input(type="radio" name="title" id="enthusiast" value="enthusiast" required)
                label(for="enthusiast") Craft Beer Enthusiast

                input(type="radio" name="title" id="homebrewer" value="homebrewer" required)
                label(for="enthusiast") Homebrewer

                input(type="radio" name="title" id="bjcp-training" value="bjcp-training" required)
                label(for="bjcp-training") BJCP (In training)

                input(type="radio" name="title" id="bjcp-mid" value="bjcp-mid" required)
                label(for="bjcp-mid") BJCP (Recognized/Certified/National)

                input(type="radio" name="title" id="bjcp-max" value="bjcp-max" required)
                label(for="bjcp-max") BJCP (Master or higher)

            fieldset 
                legend Select any of the following additional certifications that apply:
                input(type="checkbox" name="additional_training" id="sensory" value="sensory")
                label(for="sensory") Sensory training (w/ flavor kit)

                input(type="checkbox" name="additional_training" id="pro" value="pro")
                label(for="pro") Professional Brewer

                input(type="checkbox" name="additional_training" id="cicerone" value="cicerone")
                label(for="cicerone") Certified Cicerone

            fieldset 
                legend Which beer is the odd one out?
                input(type="radio" name="perceived_unique" id="perceived-A" value="A" required)
                label(for="perceived-A") A

                input(type="radio" name="perceived_unique" id="perceived-B" value="B" required)
                label(for="perceived-B") B

                input(type="radio" name="perceived_unique" id="perceived-C" value="C" required)
                label(for="perceived-C") C

                input(type="radio" name="perceived_unique" id="perceived-none" value="none" required)
                label(for="none") They are all indistinguishable
            
            //- visible if the user identified a unique beer above
            fieldset 
                legend Which beer do you prefer?
                input(type="radio" name="preference" id="preference-unique" value="unique")
                label(for="preference-unique") A

                input(type="radio" name="preference" id="preference-other" value="other")
                label(for="preference-other") B & C

            h2.question-title How do these beers compare?

            .range-input#maltiness-range
                .range-input__range Maltiness
                    .range-input__beer-label Unique Beer
                    input(type="range" id="malt_character" name="malt_character" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            .range-input#hoppiness-range
                .range-input__range Hoppiness
                    .range-input__beer-label Unique Beer
                    input(type="range" id="hop_characted" name="hop_characted" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            .range-input#yeast_character-range
                .range-input__range Yeast Character
                    .range-input__beer-label Unique Beer
                    input(type="range" id="yeast_character" name="yeast_character" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
            p.range-input__subheading Equal

            .range-input#bitterness-range
                .range-input__range Bitterness
                    .range-input__beer-label Unique Beer
                    input(type="range" id="bitterness" name="bitterness" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            .range-input#carbonation-range
                .range-input__range Carbonation
                    .range-input__beer-label Unique Beer
                    input(type="range" id="carbonation" name="carbonation" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            .range-input#body-range
                .range-input__range Body
                    .range-input__beer-label Unique Beer
                    input(type="range" id="body" name="body" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            .range-input#balance-range
                .range-input__range Balance
                    .range-input__beer-label Unique Beer
                    input(type="range" id="balance" name="balance" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other Beers
                p.range-input__subheading Equal

            fieldset 
                legend Did you detect any off-flavours in any of the beers?
                input(type="radio" name="flaws_detected" id="flaws-true" value="true")
                label(for="flaws-true") Yes
                input(type="radio" name="flaws_detected" id="flaws-false" value="false")
                label(for="flaws-false") No

            //- visible if flaws were detected
            //- values to be dynamically adjusted in JS
            .flaw-grid 
                for [key, val] of Object.entries(schema.flaws) 
                    .flaw 
                        .flaw__type
                            .flaw__type--name= h.capitalizeFirst(key)
                            .flaw__type--description= val.description
                        .flaw__choices 
                            input(type="checkbox" class="flaw__input flaw__input--unique" name=`flaws[${key}]` id=`flaw-${key}-unique` value="unique")
                            label(for=`flaw-${key}-unique`) Unique

                            input(type="checkbox" class="flaw__input flaw__input--other" name=`flaws[${key}]` id=`flaw-${key}-other` value="Other")
                            label(for=`flaw-${key}-other`) Other

            h2.question-title How would you rate these beers?

            //- label content to be dynamically updated
            .range-input
                label(for="score-unique") Unique Beer Score
                input(type="range" class="score__input" id="score-unique" name="scores[unique]" min="1" max="10" value="5" step="1")
                p.range-input__subheading Pretty Average

            .range-input
                label(for="score-other") Other Beer Score
                input(type="range" class="score__input" id="score-other" name="scores[other]" min="1" max="10" value="5" step="1")
                p.range-input__subheading Pretty Average

            label(for="comments") Additional Comments
            textarea(name="comments" id="comments") 

        input(type="submit" value="Save" class="button")