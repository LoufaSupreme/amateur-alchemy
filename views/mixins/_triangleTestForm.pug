mixin triangleTestForm()
    form(action=`/triangle-test/article/${article._id}` method="POST" class="form-card")
        .question-container
            h2.question-title Who are you?
            <br>

            .text-input-container
                input(type="text" name="token" id="token" placeholder=" " required)
                label(for="token") ID Number:
            
            .text-input-container
                input(type="text" name="name" id="name" placeholder=" ")
                label(for="name") Name (optional): 

        fieldset  
            legend.question-title Select the one that describes you best: 
            
            input(type="radio" name="title" id="enthusiast" value="enthusiast" required)
            label(for="enthusiast") Craft Beer Enthusiast

            input(type="radio" name="title" id="homebrewer" value="homebrewer" required)
            label(for="homebrewer") Homebrewer

            input(type="radio" name="title" id="bjcp-mid" value="bjcp-mid" required)
            label(for="bjcp-mid") BJCP (Recognized/Certified/National)

            input(type="radio" name="title" id="bjcp-max" value="bjcp-max" required)
            label(for="bjcp-max") BJCP (Master or higher)

        fieldset  
            legend.question-title Select any of the following additional certifications that apply:

            input(type="checkbox" name="additional_training" id="sensory" value="sensory")
            label(for="sensory") Sensory training (w/ flavor kit)

            input(type="checkbox" name="additional_training" id="pro" value="pro")
            label(for="pro") Professional Brewer

            input(type="checkbox" name="additional_training" id="cicerone" value="cicerone")
            label(for="cicerone") Certified Cicerone

        fieldset 
            legend.question-title Which beer is the odd beer out of the three?  Please make your best guess. 
            
            input(type="radio" name="perceived_unique" id="perceived-A" value="A" required)
            label(for="perceived-A") A

            input(type="radio" name="perceived_unique" id="perceived-B" value="B" required)
            label(for="perceived-B") B

            input(type="radio" name="perceived_unique" id="perceived-C" value="C" required)
            label(for="perceived-C") C
        
        //- visible if the user identified a unique beer above
        fieldset 
            legend.question-title Which beer do you prefer?
            
            input(type="radio" name="preference" id="preference-unique" value="unique")
            label(for="preference-unique") Unique Beer (A)

            input(type="radio" name="preference" id="preference-other" value="other")
            label(for="preference-other") Other 2 Beers (B & C)

        .question-container
            h2.question-title How do these beers compare?

            .range-input#maltiness-range 
                h3.question-subtitle Maltiness
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="malt_character" name="malt_character" min="0" max="4" value="2" step="1" list="maltiness-range__list")
                    datalist#maltiness-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

            .range-input#hoppiness-range
                h3.question-subtitle Hoppiness
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="hop_characted" name="hop_characted" min="0" max="4" value="2" step="1" list="hoppiness-range__list")
                    datalist#hoppiness-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

            .range-input#yeast_character-range
                h3.question-subtitle Yeast Character
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="yeast_character" name="yeast_character" min="0" max="4" value="2" step="1" list="yeast-range__list")
                    datalist#yeast-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

            .range-input#bitterness-range
                h3.question-subtitle Bitterness
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="bitterness" name="bitterness" min="0" max="4" value="2" step="1" list="bitterness-range__list")
                    datalist#bitterness-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

            .range-input#carbonation-range
                h3.question-subtitle Carbonation
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="carbonation" name="carbonation" min="0" max="4" value="2" step="1" list="carbonation-range__list")
                    datalist#carbonation-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

            .range-input#body-range
                h3.question-subtitle Body
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="body" name="body" min="0" max="4" value="2" step="1" list="body-range__list")
                    datalist#body-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal
 
            .range-input#balance-range
                h3.question-subtitle Balance
                .range-input__range 
                    .range-input__beer-label Unique Beer
                    input(type="range" id="balance" name="balance" min="0" max="4" value="2" step="1" list="balance-range__list")
                    datalist#balance-range__list 
                        option 0
                        option 1
                        option 2
                        option 3
                        option 4
                    .range-input__beer-label Other 2 Beers
                p.range-input__subheading Equal

        fieldset  
            legend.question-title Do you detect any off-flavours in any of the beers?
            
            input(type="radio" name="flaws_detected" id="flaws-true" value="true")
            label(for="flaws-true") Yes
            
            input(type="radio" name="flaws_detected" id="flaws-false" value="false")
            label(for="flaws-false") No

        //- visible if flaws were detected
        //- values to be dynamically adjusted in JS
        .question-container#off-flavor-container
            h2.question-title Match the off-flavour to the beer:
            .flaw-panel 
                for [key, val] of Object.entries(schema.flaws) 
                    .flaw 
                        .flaw__type
                            .flaw__type--name= h.capitalizeFirst(key)
                            .flaw__type--description= val.description
                        .flaw__choices 
                            input(type="checkbox" class="flaw__input flaw__input--unique" name=`flaws[${key}]` id=`flaw-${key}-unique` value="unique")
                            label(for=`flaw-${key}-unique` class="flaw__label") Unique Beer

                            input(type="checkbox" class="flaw__input flaw__input--other" name=`flaws[${key}]` id=`flaw-${key}-other` value="Other")
                            label(for=`flaw-${key}-other` class="flaw__label") Other 2 Beers

        .question-container
            h2.question-title How would you score these beers out of 5 stars?

            //- label content to be dynamically updated
            fieldset.scores 
                h3.scores__beer-label Unique Beer
                .scores__star-container
                    each num in [5,4,3,2,1]
                        input(type="radio" class="scores__star" id=`star${num}` name="scores[unique]" value=num)
                        label(for=`star${num}`) #{num} Stars

            fieldset.scores 
                h3.scores__beer-label Other 2 Beers
                .scores__star-container
                    each num in [10,9,8,7,6]
                        input(type="radio" class="scores__star" id=`star${num}` name="scores[other]" value=num-5)
                        label(for=`star${num}`) #{num-5} Stars

        .question-container
            label.question-title(for="comments") Additional Comments:
            textarea(name="comments" id="comments" placeholder="Any other comments about your observations or preferences...")

        input(type="submit" value="Save" class="button")