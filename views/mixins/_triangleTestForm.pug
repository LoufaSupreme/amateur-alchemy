mixin triangleTestForm()
    form(action=`/articles/${article_num}/triangle-test` method="POST" class="form-card" autocomplete="off")
        .question-container
            h2.question-title Who are you?
            <br>

            .text-input-container
                input(type="number" name="token" id="token" placeholder=" " required)
                label(for="token") ID Number (# on your cups):
            
            .text-input-container
                input(type="text" name="name" id="name" placeholder=" ")
                label(for="name") Name (optional): 

        fieldset.required  
            h2.question-title Which one describes you best? 
            
            input(type="radio" name="title" id="lame" value="non-drinker" required)
            label(for="lame") Rarely Drink Beer

            input(type="radio" name="title" id="enthusiast" value="enthusiast" required)
            label(for="enthusiast") Craft Beer Enthusiast

            input(type="radio" name="title" id="homebrewer" value="homebrewer" required)
            label(for="homebrewer") Homebrewer

            input(type="radio" name="title" id="pro" value="pro" required)
            label(for="pro") Professional Brewer

        fieldset  
            h2.question-title Select any of the following additional certifications you have:

            input(type="checkbox" name="additional_training" id="sensory" value="sensory" required)
            label(for="sensory") Sensory training (w/ flavor kit)

            input(type="checkbox" name="additional_training" id="bjcp-new" value="bjcp-new" required)
            label(for="bjcp-new") BJCP (In Training / Recognized)
            
            input(type="checkbox" name="additional_training" id="bjcp-mid" value="bjcp-mid" required)
            label(for="bjcp-mid") BJCP (Certified/National)

            input(type="checkbox" name="additional_training" id="bjcp-max" value="bjcp-max" required)
            label(for="bjcp-max") BJCP (Master or higher)

            input(type="checkbox" name="additional_training" id="cicerone" value="cicerone" required)
            label(for="cicerone") Certified Cicerone

        fieldset.required 
            h2.question-title Which cup contains the beer that is the odd beer out of the three?  
                span.small Please make your best guess, even if you don't perceive any difference between the three. 
            
            input(type="radio" name="perceived_unique" id="perceived-A" value="A" required)
            label(for="perceived-A") A

            input(type="radio" name="perceived_unique" id="perceived-B" value="B" required)
            label(for="perceived-B") B

            input(type="radio" name="perceived_unique" id="perceived-C" value="C" required)
            label(for="perceived-C") C
        
        //- visible if the user identified a unique beer above
        fieldset.preference.required
            h2.question-title You chose Cup <span class="unique-beer-letter">LETTER</span> as the unique beer. Which beer do you prefer?
            
            input(type="radio" name="preference" id="preference-unique" value="unique" required)
            label(for="preference-unique") Unique Beer (<span class="unique-beer-letter">UNIQUE</span>)

            input(type="radio" name="preference" id="preference-other" value="other" required)
            label(for="preference-other") Other 2 Beers (<span class="not-unique-beer-letter">OTHER</span>)
            
            input(type="radio" name="preference" id="preference-none" value="none" required)
            label(for="preference-none") There is no perceivable difference between any of the beers

        .question-container.compare
            h2.question-title How do these beers compare?

            .range-input#maltiness-range 
                h3.range-input__question-subtitle Maltiness
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="malt_character" name="malt_character" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="maltiness" data-unique="unique") The maltiness is about equal. 

            .range-input#hoppiness-range
                h3.range-input__question-subtitle Hoppiness
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="hop_character" name="hop_character" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="hoppiness" data-unique="unique") The hoppiness is about equal.

            .range-input#yeast_character-range
                h3.range-input__question-subtitle Yeast Character
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="yeast_character" name="yeast_character" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="yeast character" data-unique="unique") The yeast character is about equal.

            .range-input#bitterness-range
                h3.range-input__question-subtitle Bitterness
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="bitterness" name="bitterness" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="bitterness" data-unique="unique") The bitterness is about equal.

            .range-input#carbonation-range
                h3.range-input__question-subtitle Carbonation
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="carbonation" name="carbonation" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="carbonation" data-unique="unique") The carbonation is about equal.

            .range-input#body-range
                h3.range-input__question-subtitle Body
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="body" name="body" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="body" data-unique="unique") The body is about equal.
 
            .range-input#balance-range
                h3.range-input__question-subtitle Balance
                .range-input__range 
                    .range-input__beer-label Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)
                    input(type="range" id="balance" name="balance" min="0" max="4" value="2" step="1")
                    .range-input__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)
                p.range-input__subheading(data-attr="balance" data-unique="unique") The balance is about equal.

        fieldset#detect-flaws-container
            h2.question-title Do you detect any off-flavours in any of the beers?
            
            input(type="radio" name="flaws_detected" id="flaws-true" value="true")
            label(for="flaws-true") Yes
            
            input(type="radio" name="flaws_detected" id="flaws-false" value="false")
            label(for="flaws-false") No

        //- visible if flaws were detected
        //- values to be dynamically adjusted in JS
        .question-container#flaws
            h2.question-title#flaws__title Select the off-flavours you detected for each beer:
            .flaw-panel 
                for [key, val] of Object.entries(schema.flaws) 
                    .flaw 
                        .flaw__type
                            .flaw__type--name= h.capitalizeFirst(key)
                            .flaw__type--description= val.description
                        .flaw__choices 
                            input(type="checkbox" class="flaw__input flaw__input--unique" name=`flaws[${key}]` id=`flaw-${key}-unique` value="unique")
                            
                            label(for=`flaw-${key}-unique` class="flaw__label") 
                                .icon
                                    i.fa-solid.fa-check
                                .text Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>)

                            input(type="checkbox" class="flaw__input flaw__input--other" name=`flaws[${key}]` id=`flaw-${key}-other` value="other")
                            
                            label(for=`flaw-${key}-other` class="flaw__label") Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>)

        .question-container.scores
            h2.question-title How would you score these beers out of 5 stars?

            //- label content to be dynamically updated
            fieldset.score#score__unique 
                h3.scores__beer-label 
                    .default Unique Beer <br>(<span class="unique-beer-letter">UNIQUE</span>):
                    .alternate Score:
                .scores__star-container
                    each num in [5,4,3,2,1]
                        input(type="radio" class="scores__star" id=`star${num}` name="scores[unique]" value=num)
                        label(for=`star${num}`) #{num} Stars

            fieldset.score#score__other 
                h3.scores__beer-label Other 2 Beers <br>(<span class="not-unique-beer-letter">OTHER</span>):
                .scores__star-container
                    each num in [10,9,8,7,6]
                        input(type="radio" class="scores__star" id=`star${num}` name="scores[other]" value=num-5)
                        label(for=`star${num}`) #{num-5} Stars

        .question-container
            label.question-title(for="comments") Additional Comments:
            textarea(name="comments" id="comments" placeholder="Any other comments about your observations or preferences...")

        input(type="submit" value="Submit" class="button" id="submit-btn")